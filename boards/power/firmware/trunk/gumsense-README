Notes on compilation:
 * This compiles on mspgcc 3.2.3, using binutils 2.16.

It appears that SOME timestamps may be sent MSB first.

New I2C commands:
 * Identify read
 * Time read/write
 * Job table entry read/write
    - Change read to read a single entry.
 * Job Data Size
 * Job data read
 * Job data clear
    - Change this to be a command of its own (currently happens when
      you write to the job data read command)
 * Gumstix Power
 * Gumstix Wakeup Time
 * Job Execution Mask
 * Job Data CRC
    - Probably get rid of this, since there'll be CRCs in all
    commands.
 * Job Read Cursor
 * Job Data Size Time

The main problem that needs to be addressed is the association between
data, time and sensors.  
At the moment, the channel number is stored in the top 4 bits of the
data.  There are 8 channels.

We can use the most significant bit of each recording to mark a
reading in some special way.

Or we could extend each log by one byte so that the job number can
also be stored with each reading. 

*** How the I2C protocol on the Gumsense works: ***

Since the Linux driver for the pxa's i2c adapter doesn't support block
read or write operations, it's necessary to do some fudgery to sort
out the transfers.  Unfortunately, read is now different to write:

 * Block Write Operations
   These are pretty straightforward, and their format is the same as
   smbus block writes:
      Address R/W, Command, Length, Data x N, PEC
   This can be hacked up from userspace, including the checksum.

 * Read Commands
   These are more complex, because the number of bytes to be read are
   received during a read operation -- which isn't a supported feature
   from userspace.

   So, rather than implement the block transfer for the kernel, which
   would be a little experimental for this project, 

   It's necessary to set the command that we're doing:
   Address W, Command
   Address R, Length, *Command*, Data * N, PEC

   The important thing is that the read operation contains the command
   byte again -- which verifies that the write operation (which set
   the command) was successful.



