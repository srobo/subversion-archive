MP2COD 4.02, COFF to COD File Converter
Copyright (c) 2006 Microchip Technology Inc.
Listing File Generated: Sun Mar 11 21:33:46 2007


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           f/* $Id: c018i.c,v 1.3.14.1 2006/01/24 14:50:12 rhinec Exp $ */                  C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           /* Copyright (c)1999 Microchip Technology */                                     C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           /* MPLAB-C18 startup code, including initialized data */                         C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           /* external reference to the user's main routine */                              C:\MCC18\src\traditional\startup\c018i.c
                                           extern void main (void);                                                         C:\MCC18\src\traditional\startup\c018i.c
                                           /* prototype for the startup function */                                         C:\MCC18\src\traditional\startup\c018i.c
                                           void _entry (void);                                                              C:\MCC18\src\traditional\startup\c018i.c
                                           void _startup (void);                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           /* prototype for the initialized data setup */                                   C:\MCC18\src\traditional\startup\c018i.c
                                           void _do_cinit (void);                                                           C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\MCC18\src\traditional\startup\c018i.c
                                           extern near unsigned FSR0;                                                       C:\MCC18\src\traditional\startup\c018i.c
                                           extern near char __FPFLAGS;                                                      C:\MCC18\src\traditional\startup\c018i.c
                                           #define RND 6                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           #pragma code _entry_scn=0x000000                                                 C:\MCC18\src\traditional\startup\c018i.c
                                           void                                                                             C:\MCC18\src\traditional\startup\c018i.c
                                           _entry (void)                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                           {                                                                                C:\MCC18\src\traditional\startup\c018i.c
000000   ef86     GOTO      0x10c          _asm goto _startup _endasm                                                       C:\MCC18\src\traditional\startup\c018i.c
000002   f000                                                                                                               
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
000004   0012     RETURN    0x0            }                                                                                C:\MCC18\src\traditional\startup\c018i.c
                                           #pragma code _startup_scn                                                        C:\MCC18\src\traditional\startup\c018i.c
                                           void                                                                             C:\MCC18\src\traditional\startup\c018i.c
                                           _startup (void)                                                                  C:\MCC18\src\traditional\startup\c018i.c
                                           {                                                                                C:\MCC18\src\traditional\startup\c018i.c
                                             _asm                                                                           C:\MCC18\src\traditional\startup\c018i.c
                                               // Initialize the stack pointer                                              C:\MCC18\src\traditional\startup\c018i.c
00010c   ee13     LFSR      0x1,0x300          lfsr 1, _stack                                                               C:\MCC18\src\traditional\startup\c018i.c
00010e   f000                                                                                                               
000110   ee23     LFSR      0x2,0x300          lfsr 2, _stack                                                               C:\MCC18\src\traditional\startup\c018i.c
000112   f000                                                                                                               
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
000114   6af8     CLRF      0xf8,0x0           clrf TBLPTRU, 0 // 1st silicon doesn't do this on POR                        C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
000116   9c01     BCF       0x1,0x6,0x0        bcf __FPFLAGS,RND,0 // Initialize rounding flag for floating point libs      C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                               _endasm                                                                      C:\MCC18\src\traditional\startup\c018i.c
000118   ec16     CALL      0x2c,0x0           _do_cinit ();                                                                C:\MCC18\src\traditional\startup\c018i.c
00011a   f000                                                                                                               
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           loop:                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                             // Call the user's main routine                                                C:\MCC18\src\traditional\startup\c018i.c
00011c   ec65     CALL      0xca,0x0         main ();                                                                       C:\MCC18\src\traditional\startup\c018i.c
00011e   f000                                                                                                               
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
000120   d7fd     BRA       0x11c            goto loop;                                                                     C:\MCC18\src\traditional\startup\c018i.c
000122   0012     RETURN    0x0            }                               /* end _startup() */                             C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\MCC18\src\traditional\startup\c018i.c
                                           /* The linker will populate the _cinit table */                                  C:\MCC18\src\traditional\startup\c018i.c
                                           extern far rom struct                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           {                                                                                C:\MCC18\src\traditional\startup\c018i.c
                                             unsigned short num_init;                                                       C:\MCC18\src\traditional\startup\c018i.c
                                             struct _init_entry                                                             C:\MCC18\src\traditional\startup\c018i.c
                                             {                                                                              C:\MCC18\src\traditional\startup\c018i.c
                                               unsigned long from;                                                          C:\MCC18\src\traditional\startup\c018i.c
                                               unsigned long to;                                                            C:\MCC18\src\traditional\startup\c018i.c
                                               unsigned long size;                                                          C:\MCC18\src\traditional\startup\c018i.c
                                             }                                                                              C:\MCC18\src\traditional\startup\c018i.c
                                             entries[];                                                                     C:\MCC18\src\traditional\startup\c018i.c
                                           }                                                                                C:\MCC18\src\traditional\startup\c018i.c
                                           _cinit;                                                                          C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           #pragma code _cinit_scn                                                          C:\MCC18\src\traditional\startup\c018i.c
                                           void                                                                             C:\MCC18\src\traditional\startup\c018i.c
                                           _do_cinit (void)                                                                 C:\MCC18\src\traditional\startup\c018i.c
                                           {                                                                                C:\MCC18\src\traditional\startup\c018i.c
                                             /* we'll make the assumption in the following code that these statics          C:\MCC18\src\traditional\startup\c018i.c
                                              * will be allocated into the same bank.                                       C:\MCC18\src\traditional\startup\c018i.c
                                              */                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                             static short long prom;                                                        C:\MCC18\src\traditional\startup\c018i.c
                                             static unsigned short curr_byte;                                               C:\MCC18\src\traditional\startup\c018i.c
                                             static unsigned short curr_entry;                                              C:\MCC18\src\traditional\startup\c018i.c
                                             static short long data_ptr;                                                    C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                             // Initialized data...                                                         C:\MCC18\src\traditional\startup\c018i.c
00002c   0e2a     MOVLW     0x2a             TBLPTR = (short long)&_cinit;                                                  C:\MCC18\src\traditional\startup\c018i.c
00002e   6ef6     MOVWF     0xf6,0x0                                                                                        
000030   0e00     MOVLW     0x0                                                                                             
000032   6ef7     MOVWF     0xf7,0x0                                                                                        
000034   0e00     MOVLW     0x0                                                                                             
000036   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\MCC18\src\traditional\startup\c018i.c
000038   0100     MOVLB     0x0                movlb data_ptr                                                               C:\MCC18\src\traditional\startup\c018i.c
00003a   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\MCC18\src\traditional\startup\c018i.c
00003c   50f5     MOVF      0xf5,0x0,0x0       movf TABLAT, 0, 0                                                            C:\MCC18\src\traditional\startup\c018i.c
00003e   6f65     MOVWF     0x65,0x1           movwf curr_entry, 1                                                          C:\MCC18\src\traditional\startup\c018i.c
000040   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\MCC18\src\traditional\startup\c018i.c
000042   50f5     MOVF      0xf5,0x0,0x0       movf TABLAT, 0, 0                                                            C:\MCC18\src\traditional\startup\c018i.c
000044   6f66     MOVWF     0x66,0x1           movwf curr_entry+1, 1                                                        C:\MCC18\src\traditional\startup\c018i.c
                                             _endasm                                                                        C:\MCC18\src\traditional\startup\c018i.c
                                               //while (curr_entry)                                                         C:\MCC18\src\traditional\startup\c018i.c
                                               //{                                                                          C:\MCC18\src\traditional\startup\c018i.c
                                               test:                                                                        C:\MCC18\src\traditional\startup\c018i.c
                                               _asm                                                                         C:\MCC18\src\traditional\startup\c018i.c
000046   e103     BNZ       0x4e                bnz 3                                                                       C:\MCC18\src\traditional\startup\c018i.c
000048   6765     TSTFSZ    0x65,0x1           tstfsz curr_entry, 1                                                         C:\MCC18\src\traditional\startup\c018i.c
00004a   d001     BRA       0x4e               bra 1                                                                        C:\MCC18\src\traditional\startup\c018i.c
                                               _endasm                                                                      C:\MCC18\src\traditional\startup\c018i.c
00004c   d03d     BRA       0xc8               goto done;                                                                   C:\MCC18\src\traditional\startup\c018i.c
                                                 /* Count down so we only have to look up the data in _cinit                C:\MCC18\src\traditional\startup\c018i.c
                                                  * once.                                                                   C:\MCC18\src\traditional\startup\c018i.c
                                                  *                                                                         C:\MCC18\src\traditional\startup\c018i.c
                                                  * At this point we know that TBLPTR points to the top of the current      C:\MCC18\src\traditional\startup\c018i.c
                                                  * entry in _cinit, so we can just start reading the from, to, and         C:\MCC18\src\traditional\startup\c018i.c
                                                  * size values.                                                            C:\MCC18\src\traditional\startup\c018i.c
                                                  */                                                                        C:\MCC18\src\traditional\startup\c018i.c
                                                 _asm                                                                       C:\MCC18\src\traditional\startup\c018i.c
                                           	/* read the source address */                                                   C:\MCC18\src\traditional\startup\c018i.c
00004e   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
000050   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
000052   6f60     MOVWF     0x60,0x1       	movwf prom, 1                                                                   C:\MCC18\src\traditional\startup\c018i.c
000054   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
000056   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
000058   6f61     MOVWF     0x61,0x1       	movwf prom+1, 1                                                                 C:\MCC18\src\traditional\startup\c018i.c
00005a   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
00005c   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
00005e   6f62     MOVWF     0x62,0x1       	movwf prom+2, 1                                                                 C:\MCC18\src\traditional\startup\c018i.c
                                           	/* skip a byte since it's stored as a 32bit int */                              C:\MCC18\src\traditional\startup\c018i.c
000060   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                           	/* read the destination address directly into FSR0 */                           C:\MCC18\src\traditional\startup\c018i.c
000062   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
000064   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
000066   6ee9     MOVWF     0xe9,0x0       	movwf FSR0L, 0                                                                  C:\MCC18\src\traditional\startup\c018i.c
000068   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
00006a   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
00006c   6eea     MOVWF     0xea,0x0       	movwf FSR0H, 0                                                                  C:\MCC18\src\traditional\startup\c018i.c
                                           	/* skip two bytes since it's stored as a 32bit int */                           C:\MCC18\src\traditional\startup\c018i.c
00006e   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
000070   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                           	/* read the destination address directly into FSR0 */                           C:\MCC18\src\traditional\startup\c018i.c
000072   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
000074   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
000076   6f63     MOVWF     0x63,0x1       	movwf curr_byte, 1                                                              C:\MCC18\src\traditional\startup\c018i.c
000078   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
00007a   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
00007c   6f64     MOVWF     0x64,0x1       	movwf curr_byte+1, 1                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           	/* skip two bytes since it's stored as a 32bit int */                           C:\MCC18\src\traditional\startup\c018i.c
00007e   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
000080   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                                 _endasm                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                                 //prom = data_ptr->from;                                                   C:\MCC18\src\traditional\startup\c018i.c
                                                 //FSR0 = data_ptr->to;                                                     C:\MCC18\src\traditional\startup\c018i.c
                                                 //curr_byte = (unsigned short) data_ptr->size;                             C:\MCC18\src\traditional\startup\c018i.c
                                                 /* the table pointer now points to the next entry. Save it                 C:\MCC18\src\traditional\startup\c018i.c
                                                  * off since we'll be using the table pointer to do the copying            C:\MCC18\src\traditional\startup\c018i.c
                                                  * for the entry.                                                          C:\MCC18\src\traditional\startup\c018i.c
                                                  */                                                                        C:\MCC18\src\traditional\startup\c018i.c
000082   cff6     MOVFF     0xff6,0x67           data_ptr = TBLPTR;                                                         C:\MCC18\src\traditional\startup\c018i.c
000084   f067                                                                                                               
000086   cff7     MOVFF     0xff7,0x68                                                                                      
000088   f068                                                                                                               
00008a   cff8     MOVFF     0xff8,0x69                                                                                      
00008c   f069                                                                                                               
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                                 /* now assign the source address to the table pointer */                   C:\MCC18\src\traditional\startup\c018i.c
00008e   c060     MOVFF     0x60,0xff6           TBLPTR = prom;                                                             C:\MCC18\src\traditional\startup\c018i.c
000090   fff6                                                                                                               
000092   c061     MOVFF     0x61,0xff7                                                                                      
000094   fff7                                                                                                               
000096   c062     MOVFF     0x62,0xff8                                                                                      
000098   fff8                                                                                                               
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                                 /* do the copy loop */                                                     C:\MCC18\src\traditional\startup\c018i.c
                                                 _asm                                                                       C:\MCC18\src\traditional\startup\c018i.c
                                                   // determine if we have any more bytes to copy                           C:\MCC18\src\traditional\startup\c018i.c
00009a   0100     MOVLB     0x0            	movlb curr_byte                                                                 C:\MCC18\src\traditional\startup\c018i.c
00009c   5363     MOVF      0x63,0x1,0x1   	movf curr_byte, 1, 1                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           copy_loop:                                                                       C:\MCC18\src\traditional\startup\c018i.c
00009e   e102     BNZ       0xa4           	bnz 2 // copy_one_byte                                                          C:\MCC18\src\traditional\startup\c018i.c
0000a0   5364     MOVF      0x64,0x1,0x1   	movf curr_byte + 1, 1, 1                                                        C:\MCC18\src\traditional\startup\c018i.c
0000a2   e007     BZ        0xb2           	bz 7 // done_copying                                                            C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           copy_one_byte:                                                                   C:\MCC18\src\traditional\startup\c018i.c
0000a4   0009     TBLRDPOSTINC             	tblrdpostinc                                                                    C:\MCC18\src\traditional\startup\c018i.c
0000a6   50f5     MOVF      0xf5,0x0,0x0   	movf TABLAT, 0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
0000a8   6eee     MOVWF     0xee,0x0       	movwf POSTINC0, 0                                                               C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           	// decrement byte counter                                                       C:\MCC18\src\traditional\startup\c018i.c
0000aa   0763     DECF      0x63,0x1,0x1   	decf curr_byte, 1, 1                                                            C:\MCC18\src\traditional\startup\c018i.c
0000ac   e2f8     BC        0x9e           	bc -8 // copy_loop                                                              C:\MCC18\src\traditional\startup\c018i.c
0000ae   0764     DECF      0x64,0x1,0x1           decf curr_byte + 1, 1, 1                                                 C:\MCC18\src\traditional\startup\c018i.c
0000b0   d7f9     BRA       0xa4           	bra -7 // copy_one_byte                                                         C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           done_copying:                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                                                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                                 _endasm                                                                    C:\MCC18\src\traditional\startup\c018i.c
                                                 /* restore the table pointer for the next entry */                         C:\MCC18\src\traditional\startup\c018i.c
0000b2   c067     MOVFF     0x67,0xff6           TBLPTR = data_ptr;                                                         C:\MCC18\src\traditional\startup\c018i.c
0000b4   fff6                                                                                                               
0000b6   c068     MOVFF     0x68,0xff7                                                                                      
0000b8   fff7                                                                                                               
0000ba   c069     MOVFF     0x69,0xff8                                                                                      
0000bc   fff8                                                                                                               
                                                 /* next entry... */                                                        C:\MCC18\src\traditional\startup\c018i.c
0000be   0100     MOVLB     0x0                  curr_entry--;                                                              C:\MCC18\src\traditional\startup\c018i.c
0000c0   0765     DECF      0x65,0x1,0x1                                                                                    
0000c2   0e00     MOVLW     0x0                                                                                             
0000c4   5b66     SUBWFB    0x66,0x1,0x1                                                                                    
0000c6   d7bf     BRA       0x46                 goto test;                                                                 C:\MCC18\src\traditional\startup\c018i.c
                                           done:                                                                            C:\MCC18\src\traditional\startup\c018i.c
                                           ;                                                                                C:\MCC18\src\traditional\startup\c018i.c
0000c8   0012     RETURN    0x0            }                                                                                C:\MCC18\src\traditional\startup\c018i.c
                                           #include <p18f4550.h>                                                            C:\ecssr\testfw1\main.c
                                                                                                                            C:\ecssr\testfw1\main.c
                                           long int i;                                                                      C:\ecssr\testfw1\main.c
                                                                                                                            C:\ecssr\testfw1\main.c
                                           void main (void)                                                                 C:\ecssr\testfw1\main.c
                                           {                                                                                C:\ecssr\testfw1\main.c
                                           //rd0-4 switch                                                                   C:\ecssr\testfw1\main.c
                                           //rd5-7 leds                                                                     C:\ecssr\testfw1\main.c
                                           //re0 - big power motor fet thing                                                C:\ecssr\testfw1\main.c
                                           //re1 - fet control servo rail                                                   C:\ecssr\testfw1\main.c
                                           //re2 - fet slug rail                                                            C:\ecssr\testfw1\main.c
                                                                                                                            C:\ecssr\testfw1\main.c
0000ca   0e0f     MOVLW     0xf            	TRISD= 0x0f;                                                                    C:\ecssr\testfw1\main.c
0000cc   6e95     MOVWF     0x95,0x0                                                                                        
0000ce   6a83     CLRF      0x83,0x0       	PORTD = 0;//0b10100000;                                                         C:\ecssr\testfw1\main.c
0000d0   6a96     CLRF      0x96,0x0       	TRISE = 0;                                                                      C:\ecssr\testfw1\main.c
0000d2   0e07     MOVLW     0x7            	PORTE = 0b111; // turn all power rails on                                       C:\ecssr\testfw1\main.c
0000d4   6e84     MOVWF     0x84,0x0                                                                                        
000108   d7e6     BRA       0xd6           	while ( 1 )                                                                     C:\ecssr\testfw1\main.c
                                           	{                                                                               C:\ecssr\testfw1\main.c
0000d6   1e83     COMF      0x83,0x1,0x0   		PORTD^= 0xFF;                                                                  C:\ecssr\testfw1\main.c
                                           		                                                                               C:\ecssr\testfw1\main.c
0000d8   0100     MOVLB     0x0            	for (i=0;i<99999;i++);                                                          C:\ecssr\testfw1\main.c
0000da   6b6a     CLRF      0x6a,0x1                                                                                        
0000dc   6b6b     CLRF      0x6b,0x1                                                                                        
0000de   6b6c     CLRF      0x6c,0x1                                                                                        
0000e0   6b6d     CLRF      0x6d,0x1                                                                                        
0000e2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0000e4   516d     MOVF      0x6d,0x0,0x1                                                                                    
0000e6   0a00     XORLW     0x0                                                                                             
0000e8   e608     BN        0xfa                                                                                            
0000ea   0e9f     MOVLW     0x9f                                                                                            
0000ec   5d6a     SUBWF     0x6a,0x0,0x1                                                                                    
0000ee   0e86     MOVLW     0x86                                                                                            
0000f0   596b     SUBWFB    0x6b,0x0,0x1                                                                                    
0000f2   0e01     MOVLW     0x1                                                                                             
0000f4   596c     SUBWFB    0x6c,0x0,0x1                                                                                    
0000f6   0e00     MOVLW     0x0                                                                                             
0000f8   596d     SUBWFB    0x6d,0x0,0x1                                                                                    
0000fa   e206     BC        0x108                                                                                           
0000fc   2b6a     INCF      0x6a,0x1,0x1                                                                                    
0000fe   0e00     MOVLW     0x0                                                                                             
000100   236b     ADDWFC    0x6b,0x1,0x1                                                                                    
000102   236c     ADDWFC    0x6c,0x1,0x1                                                                                    
000104   236d     ADDWFC    0x6d,0x1,0x1                                                                                    
000106   d7ed     BRA       0xe2                                                                                            
                                           	                                                                                C:\ecssr\testfw1\main.c
                                           	}//end while                                                                    C:\ecssr\testfw1\main.c
                                           			                                                                              C:\ecssr\testfw1\main.c
00010a   0012     RETURN    0x0            }// end main                                                                     C:\ecssr\testfw1\main.c
                                                   LIST P=18F4550                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f4550.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f4550.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f4550.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4.12.1 2006/01/13 04:11:25 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           __FPFLAGSbits                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           __FPFLAGS		RES 1       ; floating point library exception flags                  C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, __FPFLAGS, __FPFLAGSbits                                   C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
