#!/bin/env python
from urllib import urlopen
import string, sgmllib, sys

def getData(partNumber):
	page = urlopen('http://xgoat.com/p/farnell/'+str(partNumber)).read()
	start = string.find(page, '<div class="availability">')
	info = page[start:]
	start = string.find(info, '<div class="availability">', 30)
	end = string.find(info, '</div>', start)
	return info[:end]

class MyParser(sgmllib.SGMLParser):
	"A simple parser class."

	def parse(self, s):
		"Parse the given string 's'."
		self.feed(s)
		self.close()

	def __init__(self, verbose=0):
		"Initialise an object, passing 'verbose' to the superclass."

		sgmllib.SGMLParser.__init__(self, verbose)
		self.qty_range = []
		self.cost = []
		self.inside_td_element = 0
		self.inside_p_element = 0
		self.last_data = ''
		self.qty = True

	def start_td(self, attributes):
		"Process a table div."
		self.inside_td_element += 1

	def end_td(self):
		"Record the end of a table div."
		self.inside_td_element -= 1

	def start_p(self, attributes):
		"Process a paragraph."
		self.inside_p_element += 1

	def end_p(self):
		"Record the end of a paragraph."
		self.inside_p_element -= 1

	def handle_data(self, data):
		"Handle the textual 'data'."

		data = data.replace('\n', '')

		if self.inside_td_element > 0:
			if self.qty:
				self.qty_range.append(data)
				self.qty = False
			else:
				self.cost.append(data[2:])
				self.qty = True
		elif self.inside_p_element > 0:
			if self.last_data == 'Price For:':
				self.price_for = data
			elif self.last_data == 'Minimum Order Quantity:':
				self.min_order = int(data)
			elif self.last_data == 'Order Multiple:':
				self.multi = int(data)

		self.last_data = data

	def get_info(self):
		"Return a list of descriptions."
		return dict(qty=self.qty_range, price=self.cost, num_for_price=self.price_for, min_order=self.min_order, multiple=self.multi)


if len(sys.argv) > 1:
	id = sys.argv[1]
else:
	id = 1172235

myHTML = getData(id)
#print myHTML

# Try and process the page.
# The class should have been defined first, remember.
myparser = MyParser()
myparser.parse(myHTML)

# Get the info.
print myparser.get_info()


